// TestFiles/IntegrationTests/CodeGenerationIntegrationTest/CSharp8.cshtml(14,5): error CS0246: The type or namespace name 'Range' could not be found (are you missing a using directive or an assembly reference?)
//     Range range = 1..5;
Diagnostic(ErrorCode.ERR_SingleTypeNameNotFound, "Range").WithArguments("Range").WithLocation(14, 5),
// TestFiles/IntegrationTests/CodeGenerationIntegrationTest/CSharp8.cshtml(17,17): error CS0103: The name 'Array' does not exist in the current context
//     var words = Array.Empty<string>();
Diagnostic(ErrorCode.ERR_NameNotInContext, "Array").WithArguments("Array").WithLocation(17, 17),
// TestFiles/IntegrationTests/CodeGenerationIntegrationTest/CSharp8.cshtml(42,7): error CS0149: Method name expected
// __o = DoSomething!(Person!);
Diagnostic(ErrorCode.ERR_MethodNameExpected, "DoSomething!").WithLocation(42, 7),
// TestFiles/IntegrationTests/CodeGenerationIntegrationTest/CSharp8.cshtml(51,5): error CS0246: The type or namespace name 'IDisposable' could not be found (are you missing a using directive or an assembly reference?)
//     IDisposable GetLastDisposableInRange(Range range)
Diagnostic(ErrorCode.ERR_SingleTypeNameNotFound, "IDisposable").WithArguments("IDisposable").WithLocation(51, 5),
// TestFiles/IntegrationTests/CodeGenerationIntegrationTest/CSharp8.cshtml(51,42): error CS0246: The type or namespace name 'Range' could not be found (are you missing a using directive or an assembly reference?)
//     IDisposable GetLastDisposableInRange(Range range)
Diagnostic(ErrorCode.ERR_SingleTypeNameNotFound, "Range").WithArguments("Range").WithLocation(51, 42),
// TestFiles/IntegrationTests/CodeGenerationIntegrationTest/CSharp8.cshtml(53,28): error CS0246: The type or namespace name 'IDisposable' could not be found (are you missing a using directive or an assembly reference?)
//         var disposables = (IDisposable[])ViewData["disposables"];
Diagnostic(ErrorCode.ERR_SingleTypeNameNotFound, "IDisposable").WithArguments("IDisposable").WithLocation(53, 28),
// TestFiles/IntegrationTests/CodeGenerationIntegrationTest/CSharp8.cshtml(53,42): error CS0103: The name 'ViewData' does not exist in the current context
//         var disposables = (IDisposable[])ViewData["disposables"];
Diagnostic(ErrorCode.ERR_NameNotInContext, "ViewData").WithArguments("ViewData").WithLocation(53, 42),
// TestFiles/IntegrationTests/CodeGenerationIntegrationTest/CSharp8.cshtml(57,18): warning CS8669: The annotation for nullable reference types should only be used in code within a '#nullable' annotations context. Auto-generated code requires an explicit '#nullable' directive in source.
//     private Human? Person { get; set; }
Diagnostic(ErrorCode.WRN_MissingNonNullTypesContextForAnnotationInGeneratedCode, "?").WithLocation(57, 18),
// TestFiles/IntegrationTests/CodeGenerationIntegrationTest/CSharp8.cshtml(59,18): warning CS8669: The annotation for nullable reference types should only be used in code within a '#nullable' annotations context. Auto-generated code requires an explicit '#nullable' directive in source.
//     private Human?[]? People { get; set; }
Diagnostic(ErrorCode.WRN_MissingNonNullTypesContextForAnnotationInGeneratedCode, "?").WithLocation(59, 18),
// TestFiles/IntegrationTests/CodeGenerationIntegrationTest/CSharp8.cshtml(59,21): warning CS8669: The annotation for nullable reference types should only be used in code within a '#nullable' annotations context. Auto-generated code requires an explicit '#nullable' directive in source.
//     private Human?[]? People { get; set; }
Diagnostic(ErrorCode.WRN_MissingNonNullTypesContextForAnnotationInGeneratedCode, "?").WithLocation(59, 21),
// TestFiles/IntegrationTests/CodeGenerationIntegrationTest/CSharp8.cshtml(61,13): error CS0246: The type or namespace name 'Func<,>' could not be found (are you missing a using directive or an assembly reference?)
//     private Func<Human, string>? DoSomething { get; set; }
Diagnostic(ErrorCode.ERR_SingleTypeNameNotFound, "Func<Human, string>").WithArguments("Func<,>").WithLocation(61, 13),
// TestFiles/IntegrationTests/CodeGenerationIntegrationTest/CSharp8.cshtml(65,22): warning CS8669: The annotation for nullable reference types should only be used in code within a '#nullable' annotations context. Auto-generated code requires an explicit '#nullable' directive in source.
//         public string? Name { get; set; }
Diagnostic(ErrorCode.WRN_MissingNonNullTypesContextForAnnotationInGeneratedCode, "?").WithLocation(65, 22)